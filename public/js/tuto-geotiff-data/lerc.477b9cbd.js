import{i as a}from"./pako.esm.48236ed7.js";import{L as s}from"./LercDecode.907ee6d6.js";import{B as o}from"./basedecoder.570f7522.js";import{L as t,a as r}from"./index.ffa04d62.js";class u extends o{constructor(e){super(),this.planarConfiguration=typeof e.PlanarConfiguration<"u"?e.PlanarConfiguration:1,this.samplesPerPixel=typeof e.SamplesPerPixel<"u"?e.SamplesPerPixel:1,this.addCompression=e.LercParameters[t.AddCompression]}decodeBlock(e){switch(this.addCompression){case r.None:break;case r.Deflate:e=a(new Uint8Array(e)).buffer;break;default:throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`)}return s.decode(e,{returnPixelInterleavedDims:this.planarConfiguration===1}).pixels[0].buffer}}export{u as default};
